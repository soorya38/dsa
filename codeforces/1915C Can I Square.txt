1915C Can I Square?

Calin has n buckets, the i-th of which contains a(i) wooden squares of side length 1
Can Calin build a square using all the given squares?

Input
The first line contains a single integer t (1≤t≤104) — the number of test cases.
The first line of each test case contains a single integer n (1≤n≤2⋅105) — the number of buckets.
The second line of each test case contains n integers a1,…,an (1≤ai≤109) — the number of squares in each bucket.
The sum of n over all test cases does not exceed 2⋅105

Output
For each test case, output "YES" if Calin can build a square using all of the given 1×1 squares, and "NO" otherwise.
You can output the answer in any case (for example, the strings "yEs", "yes", "Yes" and "YES" will be recognized as a positive answer).

#include <bits/stdc++.h>
using namespace std;

bool isSq(long long int n) {
    long long int x = sqrt(n);
    if(x *x == num)
        return true;
    return false;
}

void sol() {
    long long int n, sum = 0;
    cin >> n;
    for(int i=0; i<n; i++)
    {
        long long int x;
        cin >> x;
        sum += x;
    }
    if(isSq(sum))
        cout << "YES\n";
    else
        cout << "NO\n";
}

int main() {
    long long int tc;
    cin >> tc;
    while(tc--)
        sol();
    return 0;
}