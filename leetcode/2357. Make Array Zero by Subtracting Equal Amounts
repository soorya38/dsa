2357. Make Array Zero by Subtracting Equal Amounts

You are given a non-negative integer array nums. In one operation, you must:

Choose a positive integer x such that x is less than or equal to the smallest non-zero element in nums.
Subtract x from every positive element in nums.
Return the minimum number of operations to make every element in nums equal to 0.

Input: nums = [1,5,0,3,5]
Output: 3
Explanation:
In the first operation, choose x = 1. Now, nums = [0,4,0,2,4].
In the second operation, choose x = 2. Now, nums = [0,2,0,0,2].
In the third operation, choose x = 2. Now, nums = [0,0,0,0,0].

Input: nums = [0]
Output: 0
Explanation: Each element in nums is already 0 so no operations are needed.

class Solution {
public:
    bool isZero(vector<int> nums) {
        for(int i=0; i<nums.size(); i++)
            if(nums[i] != 0)
                return false;
        return true;
    }

    int min(vector<int> nums) {
        int m = INT_MAX;
        for(int i=0; i<nums.size(); i++)
            if(nums[i] < m && nums[i] != 0)
                m = nums[i];
        return m;
    }

    int minimumOperations(vector<int>& nums) {
        if(isZero(nums))
            return 0;

        int v = min(nums);
        if (v == INT_MAX)
            return 0;

        for(int i=0; i<nums.size(); i++)
        {
            if(nums[i] - v >= 0)
                nums[i] -= v;
        }
        
        return minimumOperations(nums) + 1;
    }

};
