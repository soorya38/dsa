2864. Maximum Odd Binary Number

You are given a binary string s that contains at least one '1'.

You have to rearrange the bits in such a way that the resulting binary number is the maximum odd binary number that can be created from this combination.

Return a string representing the maximum odd binary number that can be created from the given combination.

Note that the resulting string can have leading zeros.

Input: s = "010"
Output: "001"
Explanation: Because there is just one '1', it must be in the last position. So the answer is "001".

Input: s = "0101"
Output: "1001"
Explanation: One of the '1's must be in the last position. The maximum number that can be made with the remaining digits is "100". So the answer is "1001".

class Solution {
public:
    string maximumOddBinaryNumber(string s) {
        int l = s.size()-1;
        sort(s.begin(), s.end());
        reverse(s.begin(), s.end());
        for(int i=l; i>= 0; i--) {
            if(s[i] == '1') {
                swap(s[i], s[l]);
                break;
            }
        }
        return s;
    }
};